# frozen_string_literal: true

require 'rails_helper'

RSpec.describe 'Post Model', type: :model do
  describe Post do
    let!(:user) { create :user }

    it 'Is not valid without a title' do
      post = Post.create(user_id: user.id, content: '0123456789')

      expect(post).to_not be_valid
    end

    it 'Is not valid without a content' do
      post = Post.create(user_id: user.id, title: '01234567890123456789012345678901234567890123456789')

      expect(post).to_not be_valid
    end

    it 'Title Length valid' do
      post = Post.create(user_id: user.id, title: '01234567890123456789012345678901234567890123456789', content: '0123456789')

      expect(post).to be_valid
    end

    it 'Title Length invalid' do
      post = Post.create(user_id: user.id, title: '012345678901234567890123456789012345678901234567890', content: '0123456789')

      expect(post).to_not be_valid
    end

    it 'Content Length valid' do
      post = Post.create(user_id: user.id, title: '01234567890123456789012345678901234567890123456789', content: '01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789')

      expect(post).to be_valid
    end

    it 'Content Length invalid' do
      post = Post.create(user_id: user.id, title: '01234567890123456789012345678901234567890123456789', content: '012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890')

      expect(post).to_not be_valid
    end

    it 'Comment belongs to user' do
      should belong_to(:user)
    end
  end
end
